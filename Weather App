from tkinter import *
from tkinter import ttk
import urllib.request
import json

# List of cities for autocomplete
global cities
cities = ["Bhopal", "Gairatganj", "Burhanpur", "Chhindwara", "Bharuch", "Kheda (Nadiad)", "Vadodara",
          "Valsad", "Surendranagar", "Surat", "Rajkot", "Patan", "Navsari", "Narmada", "Morbi", "Mehsana", "Junagadh",
          "Jamnagar", "Gir Somnath", "Dahod", "Dang", "Devbhoomi Dwarka", "Gandhinagar", "Botad", "Bhavn", "Bilaspur",
          "Chamba", "Hamirpur", "Kangra", "Kinnaur", "Kullu", "Mandi", "Shimla", "Sirmaur", "Solan", "Una", "Bokaro",
          "Chatra", "Deoghar", "Dhanbad", "Ranchi", "Bagalkot", "Bangalore", "Belgaum", "Alappuzha", "Ernakulam",
          "Idukki", "Agra", "Aligarh", "Bareilly", "Chennai", "Coimbatore", "Madurai"]

# Function to get weather data using OpenWeatherMap API with urllib
def get_weather():
    city = com.get().strip()
    if not city:
        result_label.config(text="Please enter or select a valid city.")
        return

    api_key = '253682c0bd759acfb4255d4aa08c3dd7'  # Your OpenWeatherMap API key
    url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&APPID={api_key}'
    
    try:
        with urllib.request.urlopen(url) as response:
            data = json.loads(response.read().decode())
        
        # Extract weather data from API response
        temperature_kelvin = data['main']['temp']
        temperature_celsius = temperature_kelvin - 273.15
        temperature_fahrenheit = (temperature_celsius * 9/5) + 32
        humidity = data['main']['humidity']
        weather_condition = data['weather'][0]['description']
        wind_speed = data['wind']['speed']
        pressure = data['main']['pressure']
        country_code = data['sys']['country']
        city_with_country = f"{city}, {country_code}"

        # Update the result label with weather information
        result_label.config(text=f"City: {city_with_country}\n"
                                 f"Temperature: {temperature_celsius:.2f} °C / {temperature_fahrenheit:.2f} °F\n"
                                 f"Humidity: {humidity}%\nWeather Condition: {weather_condition}\n"
                                 f"Wind Speed: {wind_speed} m/s\nPressure: {pressure} hPa")
    
    except urllib.error.URLError as e:
        result_label.config(text=f"Error: Unable to retrieve data.\n{e}")
    except KeyError:
        result_label.config(text="Error: Incorrect data format. Please try again.")

# Function for combobox autocomplete
def on_key_release(event):
    value = event.widget.get().strip().lower()
    if value == '':
        listbox_update([])
        return
    matches = [city for city in cities if value in city.lower()]
    listbox_update(matches)

# Update the listbox with matching city names
def listbox_update(matches):
    listbox.delete(0, END)
    for match in matches:
        listbox.insert(END, match)

# Function to handle listbox selection
def on_select(event):
    try:
        selected_city = listbox.get(listbox.curselection())  # Get the selected city
        com.set(selected_city)  # Set the selected city in the combobox
        listbox_update([])  # Clear the listbox
    except:
        pass

# GUI Setup
win = Tk()
win.title("Weather App")
win.config(bg="#f5f5f5")
win.geometry("600x400")

# Weather App Header Label
name_label = Label(win, text="Weather App", font=("Helvetica", 30, "bold"), fg="#333", bg="#f5f5f5")
name_label.place(x=200, y=20)

# Combobox to enter/select city
com = ttk.Combobox(win, values=cities, font=("Helvetica", 12))
com.place(x=200, y=80, width=200)
com.bind('<KeyRelease>', on_key_release)  # Trigger autocomplete on key release

# Listbox for autocomplete
listbox = Listbox(win, font=("Helvetica", 12))
listbox.place(x=200, y=105, width=200, height=100)
listbox.bind('<<ListboxSelect>>', on_select)  # Trigger city selection

# Button to get weather data
done_button = Button(win, text="Get Weather", font=("Helvetica", 12), bg="#4CAF50", fg="white", command=get_weather)
done_button.place(x=250, y=200)

# Label to display the weather result
result_label = Label(win, text="", font=("Helvetica", 12), wraplength=500, justify="left", bg="#f5f5f5")
result_label.place(x=50, y=260)

# Start the Tkinter main loop
win.mainloop()
